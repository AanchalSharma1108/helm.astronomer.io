pipeline:
  # Just build when we push to master
  build:
    image: astronomerio/ap-build:0.0.6
    commands:
      - make build
    when:
      event: push
      branch: master

  # Build when we tag
  build:
    image: astronomerio/ap-build:0.0.6
    commands:
      - make build
    environment:
      - ASTRONOMER_VERSION=${DRONE_TAG##v}
    when:
      event: tag
      branch: [ master, release-* ]

  # Push to helm.astronomer.io
  push:
    image: astronomerio/ap-build:0.0.6
    commands:
      - printf "%s" $${GCP_TOKEN} > /tmp/gcs_token.json
      - sed -i 's/BEGINPRIVATEKEY/BEGIN PRIVATE KEY/g' /tmp/gcs_token.json
      - sed -i 's/ENDPRIVATEKEY/END PRIVATE KEY/g' /tmp/gcs_token.json
      - gcloud auth activate-service-account --key-file=/tmp/gcs_token.json
      - make push-repo
    environment:
      - ASTRONOMER_VERSION=${DRONE_TAG##v}
    secrets: [ gcp_token ]
    when:
      event: tag
      branch: [ master, release-* ]

  # Push new versions back to github
  commit:
    image: astronomerio/ap-build:0.0.6
    commands:
      - mkdir -p /root/.ssh
      - echo "$${GIT_PUSH_SSH_KEY}" > /root/.ssh/id_rsa
      - chmod 600 /root/.ssh/id_rsa
      - ssh-keyscan -H github.com >> /root/.ssh/known_hosts
      - git status
    environment:
      - ASTRONOMER_VERSION=${DRONE_TAG##v}
    secrets: [ git_push_ssh_key ]
    when:
      event: tag
      branch: [ master, release-* ]

  # test:
  #   image: astronomerio/ap-build:0.0.6
  #   commands:
  #     - mkdir -p /root/.ssh
  #     - echo "$${GIT_PUSH_SSH_KEY}" > /root/.ssh/id_rsa
  #     - chmod 600 /root/.ssh/id_rsa
  #     - cat /root/.ssh/id_rsa
  #     - ssh-keyscan -H github.com >> /root/.ssh/known_hosts
  #     # - ssh -T git@github.com 2>&1 | grep 'successfully authenticated'
  #   secrets: [ git_push_ssh_key ]
  #   when:
  #     event: push
  #     branch: master





    # remote: git@github.com:astronomerio/helm.astronomer.io.git
    # branch: master
    # commit: true
    # commit_message: "Bump to version ${DRONE_TAG##v}"
    # key: $${GIT_PUSH_SSH_KEY}
    # when:
    #   event: tag
    #   branch: [ master, release-* ]
