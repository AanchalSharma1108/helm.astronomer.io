{{/* Airflow environment variables */}}
{{- define "airflow_environment" }}
  # Dynamically created environment variables
  {{- range $i, $config := .Values.env }}
  - name: {{ $config.name }}
    value: {{ $config.value | quote }}
  {{- end }}
  # Hard Coded Airflow Envs
  - name: AIRFLOW__CORE__EXECUTOR
    value: "CeleryExecutor"
  - name: AIRFLOW__CELERY__DEFAULT_QUEUE
    value: "celery"
  - name: AIRFLOW__SCHEDULER__STATSD_ON
    value: "True"
  - name: AIRFLOW__SCHEDULER__STATSD_PORT
    value: "9125"
  - name: AIRFLOW__SCHEDULER__STATSD_PREFIX
    value: "airflow"
  - name: AIRFLOW__WEBSERVER__BASE_URL
    value: {{ include "airflow_url" . }}
  - name: AIRFLOW__KUBERNETES__NAMESPACE
    value: {{ include "namespace" . }}
  - name: ASTRONOMER__AIRFLOW__WORKER_LOG_RETENTION
    value: "15"
  # Dynamically created secret envs
  {{- range $i, $config := .Values.secret }}
  - name: {{ $config.name }}
    valueFrom:
      secretKeyRef:
        name: {{ $config.value }}
        key:  value
  {{- end}}
  # Hard Coded Secret Envs
  - name: AIRFLOW__SCHEDULER__STATSD_HOST
    value: "{{ .Release.Name }}-statsd"
  - name: AIRFLOW__CORE__SQL_ALCHEMY_CONN
    valueFrom:
      secretKeyRef:
        name: {{ template "airflow_metadata_secret" . }}
        key: connection
  - name: AIRFLOW__CELERY__CELERY_RESULT_BACKEND
    valueFrom:
      secretKeyRef:
        name: {{ template "airflow_result_backend_secret" . }}
        key: connection
  - name: AIRFLOW__CELERY__BROKER_URL
    valueFrom:
      secretKeyRef:
        name: {{ .Release.Name }}-broker-url
        key: connection
  - name: AIRFLOW__CORE__FERNET_KEY
    valueFrom:
      secretKeyRef:
        name: {{ template "fernet_key_secret" . }}
        key: fernet-key
{{- end }}

{{- define "namespace" -}}
{{- if and .Values.platform.namespace -}}
{{- printf "%s-%s" .Values.platform.namespace .Release.Name -}}
{{- else -}}
{{- .Release.Namespace }}
{{- end -}}
{{- end -}}

{{ define "airflow_url" -}}
{{ .Release.Name }}-airflow.{{ .Values.ingress.baseDomain }}
{{- end }}

{{ define "flower_url" -}}
{{ .Release.Name }}-flower.{{ .Values.ingress.baseDomain }}
{{- end }}

{{ define "airflow_image" -}}
{{ .Values.images.airflow.name }}:{{ .Values.images.airflow.tag }}
{{- end }}

{{ define "flower_image" -}}
{{ .Values.images.flower.name }}:{{ .Values.images.flower.tag }}
{{- end }}

{{ define "statsd_image" -}}
{{ .Values.images.statsd.name }}:{{ .Values.images.statsd.tag }}
{{- end }}

{{ define "redis_image" -}}
{{ .Values.images.redis.name }}:{{ .Values.images.redis.tag }}
{{- end }}

{{ define "fernet_key_secret" -}}
{{ default (printf "%s-fernet-key" .Release.Name) .Values.fernetKeySecretName }}
{{- end }}

{{ define "redis_password_secret" -}}
{{ default (printf "%s-redis-password" .Release.Name) .Values.redis.passwordSecretName }}
{{- end }}

{{ define "airflow_metadata_secret" -}}
{{ default (printf "%s-airflow-metadata" .Release.Name) .Values.data.metadataSecretName }}
{{- end }}

{{ define "airflow_result_backend_secret" -}}
{{ default (printf "%s-airflow-result-backend" .Release.Name) .Values.data.resultBackendSecretName }}
{{- end }}
