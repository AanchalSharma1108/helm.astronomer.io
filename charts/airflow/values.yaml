# Default values for airflow.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# User and group of airflow user
uid: 100
gid: 101

# Ingress configuration
ingress:
  # Enable ingress resource
  enabled: false

  # Enable for cert-manager or kube-lego
  acme: false

  # Name of tls secret to use on ingress
  tlsSecretName: ~

  # Base domain for ingress vhosts
  baseDomain: ~

  # If deployed from the Astronomer platform, this will be overridden
  # to a class that matches the platform release name. This lets us run
  # multiple platforms in one cluster and have deployments from one platform
  # use the corresponding platform ingress controller.
  class: "nginx"

  # Enable platform authentication
  auth:
    enabled: true

# Network policy configuration
networkPolicies:
  # Enabled network policies
  enabled: false

# Airflow home directory
# Used for mount paths
airflowHome: "/usr/local/airflow"

# Enable RBAC (default on most clusters these days)
rbacEnabled: true

# Airflow executor
# Options: SequentialExecutor, LocalExecutor, CeleryExecutor, KubernetesExecutor
executor: "CeleryExecutor"

# Astronomer Airflow images
images:
  airflow:
    name: astronomerinc/ap-airflow
    tag: 0.5.1
  flower:
    name: astronomerinc/ap-airflow
    tag: 0.5.1
  statsd:
    name: astronomerinc/ap-statsd-exporter
    tag: 0.5.1
  redis:
    name: astronomerinc/ap-redis
    tag: 0.5.1
  pgbouncer:
    name: astronomerinc/ap-pgbouncer
    tag: 0.5.1
  pgbouncerExporter:
    name: astronomerinc/ap-pgbouncer-exporter
    tag: 0.5.1

# Environment variables for all airflow containers
env:

# Astronomer Airflow database config
data:
  # If secret names are provided, use those secrets
  metadataSecretName: ~
  resultBackendSecretName: ~

  # Otherwise pass connection values in
  metadataConnection: {}
    # user: ~
    # pass: ~
    # host: ~
    # port: ~
    # db: ~
  resultBackendConnection: {}
    # user: ~
    # pass: ~
    # host: ~
    # port: ~
    # db: ~

# Fernet key settings
fernetKey: ~
fernetKeySecretName: ~

# Airflow Worker Config
workers:
  # Number of airflow celery workers in StatefulSet
  replicas: 1

  persistence:
    # Enable persistent volumes
    enabled: true
    # Volume size for worker StatefulSet
    size: 100Gi
    # If using a custom storageClass, pass name ref to all statefulSets here
    storageClassName:

  resources: {}
  #  limits:
  #   cpu: 100m
  #   memory: 128Mi
  #  requests:
  #   cpu: 100m
  #   memory: 128Mi

  # Grace period for tasks to finish after SIGTERM is sent from kubernetes
  terminationGracePeriodSeconds: 600

  # Apply a HorizontalPodAutoscaler
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 10
    targetCPUUtilization: 80
    targetMemoryUtilization: 80

# Airflow scheduler settings
scheduler:
  # Ensure we have one replica always running
  podDisruptionBudget:
    maxUnavailable: 1

  resources: {}
  #  limits:
  #   cpu: 100m
  #   memory: 128Mi
  #  requests:
  #   cpu: 100m
  #   memory: 128Mi

# Airflow webserver settings
webserver:
  resources: {}
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

# Flower settings
flower:
  resources: {}
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

# Statsd settings
statsd:
  resources: {}
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

# Pgbouncer settings
pgbouncer:
  # Enable pgbouncer
  enabled: false

  # Pool sizes
  metadataPoolSize: 3
  resultBackendPoolSize: 2

  resources: {}
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

redis:
  terminationGracePeriodSeconds: 600

  persistence:
    # Enable persistent volumes
    enabled: true
    # Volume size for worker StatefulSet
    size: 1Gi
    # If using a custom storageClass, pass name ref to all statefulSets here
    storageClassName:

  resources: {}
  #  limits:
  #   cpu: 100m
  #   memory: 128Mi
  #  requests:
  #   cpu: 100m
  #   memory: 128Mi

  # If set use as redis secret
  passwordSecretName: ~
  brokerURLSecretName: ~

  # Else, if password is set, create secret with it,
  # else generate a new one on install
  password: ~

# Auth secret for a private registry
# This is used if pulling airflow images from a private registry
registry:
  secretName: ~

  connection: {}
    # user: ~
    # pass: ~
    # host: ~
    # email: ~

# All ports used by chart
ports:
  flowerUI: 5555
  airflowUI: 8080
  workerLogs: 8793
  redisDB: 6379
  statsdIngest: 9125
  statsdScrape: 9102
  pgbouncer: 6543
  pgbouncerScrape: 9127

# Define any ResourceQuotas for namespace
quotas: {}

# Define default/max/min values for pods and containers in namespace
limits: {}

# This block contains settings strictly used to integrate into the Astronomer platform.
# This is what allows for integration into platform ingress, network policies, metrics collection, etc.
# This chart is completely deployable without specifying these values.
platform:
  release: ~
  workspace: ""
