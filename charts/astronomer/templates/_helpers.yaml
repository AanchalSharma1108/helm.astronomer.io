{{ define "helm_globals" -}}
  {{- $globals := dict -}}
  {{- $_ := set $globals "baseDomain" (default "" .Values.global.baseDomain) -}}
  {{- $_ := set $globals "registryAuthSecret" .Values.global.registryAuthSecret -}}
  {{- $_ := set $globals "acme" (.Values.global.acme) -}}
  {{- $_ := set $globals "rbacEnabled" .Values.global.rbacEnabled -}}
  {{- $_ := set $globals "releaseName" (print .Release.Name | toString) -}}
  {{- $_ := set $globals "releaseNamespace" (print .Release.Namespace | toString) -}}
  {{- $_ := set $globals "releaseVersion" (print .Chart.Version | toString) -}}
  {{ $globals | toJson | print }}
{{- end }}

{{- define "random_string" }}
  {{- randAlphaNum 32 | b64enc }}
{{- end }}

{{ define "commander_image" -}}
{{ .Values.images.commander.repository }}:{{ .Values.images.commander.tag }}
{{- end }}

{{ define "houston_image" -}}
{{ .Values.images.houston.repository }}:{{ .Values.images.houston.tag }}
{{- end }}

{{ define "orbit_image" -}}
{{ .Values.images.orbit.repository }}:{{ .Values.images.orbit.tag }}
{{- end }}

{{ define "registry_image" -}}
{{ .Values.images.registry.repository }}:{{ .Values.images.registry.tag }}
{{- end }}

{{ define "db_bootstrapper_image" -}}
{{ .Values.images.dbBootstrapper.repository }}:{{ .Values.images.dbBootstrapper.tag }}
{{- end }}

{{ define "cli_install_image" -}}
{{ .Values.images.cliInstall.repository }}:{{ .Values.images.cliInstall.tag }}
{{- end }}

{{ define "registry_docker_config" -}}
  {{- $domain := printf "registry.%v" .Values.global.baseDomain }}
  {{- $email := printf "admin@%v" .Values.global.baseDomain }}
  {{- $user := randAlphaNum 16 -}}
  {{- $pass := randAlphaNum 32 -}}

  {{- $config := dict "auths" -}}
  {{- $auth := dict -}}
  {{- $data := dict -}}
  {{- $_ := set $data "username" $user -}}
  {{- $_ := set $data "password" $pass -}}
  {{- $_ := set $data "email" $email -}}
  {{- $_ := set $data "auth" (printf "%v:%v" $user $pass | b64enc) -}}
  {{- $_ := set $auth $domain $data -}}
  {{- $_ := set $config "auths" $auth -}}
  {{ $config | toJson | print }}
{{- end }}

{{ define "auth_strategies" -}}
  {{- if or .Values.auth.local.enabled -}}
    local,
  {{- end -}}
  {{- if or .Values.auth.google.enabled -}}
    google_oauth,
  {{- end -}}
  {{- if or .Values.auth.auth0.enabled -}}
    auth0_oauth,
  {{- end -}}
  {{- if or .Values.auth.github.enabled -}}
    github_oauth,
  {{- end -}}
{{- end }}

{{ define "houston_backend_secret" -}}
{{ default (printf "%s-houston-backend" .Release.Name) .Values.houston.backendSecretName }}
{{- end }}

{{ define "airflow_backend_secret" -}}
{{ default (printf "%s-houston-backend" .Release.Name) .Values.houston.airflowBackendSecretName }}
{{- end }}

{{ define "houston_bootstrapper_serviceaccount" -}}
{{ printf "%s-houston-bootstrapper-serviceaccount" .Release.Name }}
{{- end }}
