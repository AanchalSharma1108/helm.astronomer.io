#################################
## Astronomer global configuration
#################################
global:
  # Base domain for all subdomains exposed through ingress
  baseDomain: ~

  # Use kube-lego
  acme: false

  # If RBAC on cluster is enabled
  rbacEnabled: true

  # Name of secret containing TLS certificate
  tlsSecret:

  # Name of secret containing basic auth for NGINX
  nginxAuthSecret: "nginx-auth"

  # Name of secret containing docker registry auth
  registryAuthSecret: "registry-auth"

  # URL to the Astronomer helm repo
  helmRepo: "https://helm.astronomer.io"

  # Host and port of where tiller is running in Kubernetes
  helmHost: "tiller-deploy.kube-system.svc.cluster.local:44134"

  # Namespace Tiller is installed on
  tillerNamespace: "kube-system"

  # Astronomer modules
  modules:

    # Enable airflow module
    airflow:
      enabled: false

    # Enable astronomer module
    astronomer:
      enabled: true

    # Enable NGINX ingress module
    nginx:
      enabled: true

    # Enable Grafana module
    grafana:
      enabled: true

    # Enable Prometheus module
    prometheus:
      enabled: true

    # Enable Elasticsearch module
    elasticsearch:
      enabled: true

    # Enable Fluentd module
    # fluentd:
    #   enabled: true

#################################
## Astronomer configuration
#################################
astronomer:
  orbit:
    resources:
      limits:
        cpu: "500m"
        memory: "1024Mi"
      requests:
        cpu: "100m"
        memory: "256Mi"

  houston:
    resources:
      limits:
        cpu: "500m"
        memory: "1024Mi"
      requests:
        cpu: "250m"
        memory: "512Mi"

  commander:
    resources:
      limits:
        cpu: "500m"
        memory: "1024Mi"
      requests:
        cpu: "250m"
        memory: "512Mi"

  registry:
    resources:
      limits:
        cpu: "500m"
        memory: "1024Mi"
      requests:
        cpu: "250m"
        memory: "512Mi"

  install:
    resources:
      limits:
        cpu: "500m"
        memory: "1024Mi"
      requests:
        cpu: "100m"
        memory: "256Mi"

#################################
## Nginx configuration
#################################
nginx:
  resources:
    limits:
      cpu: "1"
      memory: "2048Mi"
    requests:
      cpu: "500m"
      memory: "1024Mi"

  # IP address the nginx ingress should bind to
  loadBalancerIP:

  # Used to restrict IPs which can reach the nginx ingress
  loadBalancerSourceRanges:


#################################
## Grafana configuration
#################################
grafana:
  resources:
    limits:
      cpu: "500m"
      memory: "1024Mi"
    requests:
      cpu: "250m"
      memory: "512Mi"

#################################
## Prometheus configuration
#################################
prometheus:
  resources:
    limits:
      cpu: "500m"
      memory: "1024Mi"
    requests:
      cpu: "250m"
      memory: "512Mi"
