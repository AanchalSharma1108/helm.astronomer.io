#################################
## Astronomer global configuration
#################################
global:
  # Base domain for all subdomains exposed through ingress
  baseDomain: ~

  # Use kube-lego
  acme: false

  # If RBAC on cluster is enabled
  rbacEnabled: true

  # Name of secret containing TLS certificate
  tlsSecret: ~

  # Name of secret containing basic auth for NGINX
  nginxAuthSecret: "nginx-auth"

  # Name of secret containing docker registry auth
  registryAuthSecret: "registry-auth"

  # URL to the Astronomer helm repo
  helmRepo: "https://helm.astronomer.io"

  # Host and port of where tiller is running in Kubernetes
  helmHost: "tiller-deploy.kube-system.svc.cluster.local:44134"

  # Namespace Tiller is installed on
  tillerNamespace: "kube-system"


#################################
## Astronomer configuration
#################################
astronomer:
  # Enable astronomer chart
  enabled: true

  orbit:
    resources:
      requests:
        cpu: "100m"
        memory: "256Mi"
      limits:
        cpu: "500m"
        memory: "1024Mi"

  houston:
    resources:
      requests:
        cpu: "250m"
        memory: "512Mi"
      limits:
        cpu: "500m"
        memory: "1024Mi"

  commander:
    resources:
      requests:
        cpu: "250m"
        memory: "512Mi"
      limits:
        cpu: "500m"
        memory: "1024Mi"

  registry:
    resources:
      requests:
        cpu: "250m"
        memory: "512Mi"
      limits:
        cpu: "500m"
        memory: "1024Mi"

    persistence:
      enabled: true
      size: "100Gi"

  install:
    resources:
      requests:
        cpu: "100m"
        memory: "256Mi"
      limits:
        cpu: "500m"
        memory: "1024Mi"


#################################
## Nginx configuration
#################################
nginx:
  # Enable nginx chart
  enabled: true

  # Configure resources
  resources:
    requests:
      cpu: "500m"
      memory: "1024Mi"
    limits:
      cpu: "1"
      memory: "2048Mi"

  # IP address the nginx ingress should bind to
  loadBalancerIP:

  # Used to restrict IPs which can reach the nginx ingress
  loadBalancerSourceRanges:


#################################
## Grafana configuration
#################################
grafana:
  # Enable grafana chart
  enabled: true

  # Configure resources
  resources:
    requests:
      cpu: "250m"
      memory: "512Mi"
    limits:
      cpu: "500m"
      memory: "1024Mi"


#################################
## Prometheus configuration
#################################
prometheus:
  # Enable prometheus chart
  enabled: true

  # Configure resources
  resources:
    requests:
      cpu: "250m"
      memory: "512Mi"
    limits:
      cpu: "500m"
      memory: "1024Mi"

  persistence:
    enabled: true
    size: "100Gi"

#################################
## Elasticsearch configuration
#################################
elasticsearch:
  # Enable elasticsearch chart
  enabled: true

  # Common configuration
  persistence: true

  # Configure client nodes
  client:
    # Match resources.requests.memory
    heapMemory: "2g"

    resources:
      requests:
        cpu: "1"
        memory: "2Gi"
      limits:
        cpu: "2"
        memory: "4Gi"

  # Configure data nodes
  data:
    # Match resources.requests.memory
    heapMemory: "2g"

    resources:
      requests:
        cpu: "1"
        memory: "2Gi"
      limits:
        cpu: "2"
        memory: "4Gi"

    persistence:
      size: "100Gi"

  # Configure master nodes
  master:
    # Match resources.requests.memory
    heapMemory: "2g"

    resources:
      requests:
        cpu: "1"
        memory: "2Gi"
      limits:
        cpu: "2"
        memory: "4Gi"

    persistence:
      size: "20Gi"


#################################
## Kibana configuration
#################################
kibana:
  # Enable kibana chart
  enabled: true

  # Configure resources
  resources:
    requests:
      cpu: "250m"
      memory: "512Mi"
    limits:
      cpu: "500m"
      memory: "1024Mi"


#################################
## Fluentd configuration
#################################
fluentd:
  # Enable fluentd chart
  enabled: true

  # Configure resources
  # resources:
  #   requests:
  #     cpu: "250m"
  #     memory: "512Mi"
  #   limits:
  #     cpu: "500m"
  #     memory: "1024Mi"


#################################
## Kube State configuration
#################################
kubeState:
  # Enable fluentd chart
  enabled: true

  # Configure resources
  # resources:
  #   requests:
  #     cpu: "250m"
  #     memory: "512Mi"
  #   limits:
  #     cpu: "500m"
  #     memory: "1024Mi"


#################################
## Airflow configuration
#################################
airflow:
  # This is just to disable installation of the airflow chart during
  # a platform install.
  enabled: false
